households_in_poverty <- get_acs(geography = "county",
variables = c("B17017_002"),
state = states,
year = 2015) %>%
rename(households_in_poverty = estimate) %>%
select(1,2,4)
# load required packages
library(tidycensus)
library(rgdal)
library(readr)
library(dplyr)
library(tidyr)
library(tigris)
library(utils)
black_population <- get_acs(geography = "county",
variables = c("B02009_001"),
state = states,
year = 2015) %>%
rename(black_population = estimate) %>%
select(1,2,4)
black_population <- get_acs(geography = "county",
variables = c("B02009_001"),
state = states,
year = 2015) %>%
rename(black_population = estimate) %>%
select(1,2,4)
# create list of US states, by two-letter abbrevations, plus DC and PR
states <- c(state.abb, "DC", "PR")
population <- get_acs(geography = "county",
variables = "B01003_001",
state = states,
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
population <- get_acs(geography = "state",
variables = "B01003_001",
state = states,
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
population <- get_acs(geography = "state",
variables = "B01003_001",
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
View(population)
setwd("~/Dropbox/berkeley/2017dataviz/Reis Thebault/reis-thebault")
# load required packages
library(tidycensus)
library(rgdal)
library(readr)
library(dplyr)
library(tigris)
# set census api key. Obtain from http://api.census.gov/data/key_signup.html
census_api_key("f6811bb29b8f3f4de930ececf654c6d0ebe6c7be", install = TRUE)
readRenviron("~/.Renviron")
# get list of variables in the 2015 American Community Survey, 5-year estimates (i.e. 2011-2015)
acs15 <- load_variables(2015, "acs5", cache = TRUE)
#############
# get ACS 2015 5-year data, by counties
# population
population <- get_acs(geography = "state",
variables = "B01003_001",
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
# number of households
households <- get_acs(geography = "state",
variables = c("B17017_001"),
year = 2015) %>%
rename(households = estimate) %>%
select(1,2,4)
# white population (white alone, not latino)
white_population <- get_acs(geography = "state",
variables = c("B01001_001"),
year = 2015) %>%
rename(white_population = estimate) %>%
select(1,2,4)
# join data frames into one, calculate percentages where necessary
states <- inner_join(population,households) %>%
inner_join(white_population) %>%
mutate(pc_white_population = round(black_population/population*100,2),
pc_minority_population = 100 - pc_white_population)
# Some cleaning: remove NaNs from data, replace with zero
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
counties[is.nan(counties)] <- 0
# save as CSV
write_csv(states,"states.csv", na="")
# works with TIGRIS package to obtain Census Bureau shapefiles
options(tigris_use_cache = TRUE)
# load Census Bureau TIGER/LINE states shapefile
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- inner_join(states_map@data, states, by="GEOID")
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
states <- inner_join(population,households) %>%
inner_join(white_population) %>%
mutate(pc_white_population = round(black_population/population*100,2),
pc_minority_population = 100 - pc_white_population)
states <- inner_join(population,households) %>%
inner_join(white_population) %>%
mutate(pc_white_population = round(white_population/population*100,2),
pc_minority_population = 100 - pc_white_population)
View(states)
# get list of variables in the 2015 American Community Survey, 5-year estimates (i.e. 2011-2015)
acs15 <- load_variables(2015, "acs5", cache = TRUE)
View(acs15)
population <- get_acs(geography = "state",
variables = "B01003_001",
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
# number of households
households <- get_acs(geography = "state",
variables = c("B17017_001"),
year = 2015) %>%
rename(households = estimate) %>%
select(1,2,4)
# white population (white alone, not latino)
white_population <- get_acs(geography = "state",
variables = c("B01001H_001"),
year = 2015) %>%
rename(white_population = estimate) %>%
select(1,2,4)
# join data frames into one, calculate percentages where necessary
states <- inner_join(population,households) %>%
inner_join(white_population) %>%
mutate(pc_white_population = round(white_population/population*100,2),
pc_minority_population = 100 - pc_white_population)
# Some cleaning: remove NaNs from data, replace with zero
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
counties[is.nan(counties)] <- 0
# save as CSV
write_csv(states,"states.csv", na="")
# works with TIGRIS package to obtain Census Bureau shapefiles
options(tigris_use_cache = TRUE)
# load Census Bureau TIGER/LINE states shapefile
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- inner_join(states_map@data, states, by="GEOID")
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
setwd("~/Dropbox/berkeley/2017dataviz/Reis Thebault/reis-thebault")
census_api_key("f6811bb29b8f3f4de930ececf654c6d0ebe6c7be", install = TRUE)
readRenviron("~/.Renviron")
# get list of variables in the 2015 American Community Survey, 5-year estimates (i.e. 2011-2015)
acs15 <- load_variables(2015, "acs5", cache = TRUE)
#############
# get ACS 2015 5-year data, by counties
# population
population <- get_acs(geography = "state",
variables = "B01003_001",
year = 2015) %>%
rename(population = estimate)  %>%
select(1,2,4)
households <- get_acs(geography = "state",
variables = c("B17017_001"),
year = 2015) %>%
rename(households = estimate) %>%
select(1,2,4)
white_population <- get_acs(geography = "state",
variables = c("B01001H_001"),
year = 2015) %>%
rename(white_population = estimate) %>%
select(1,2,4)
states <- inner_join(population,households) %>%
inner_join(white_population) %>%
mutate(pc_white_population = round(white_population/population*100,2),
pc_minority_population = 100 - pc_white_population)
View(states)
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
states[is.nan(states)] <- 0
# save as CSV
write_csv(states,"states.csv", na="")
# load Census Bureau TIGER/LINE states shapefile
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- inner_join(states_map@data, states, by="GEOID")
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
# save as CSV
write_csv(states,"states.csv", na="")
setwd("~/Dropbox/berkeley/2017dataviz/Reis Thebault/reis-thebault")
# save as CSV
write_csv(states,"states.csv", na="")
="
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
# load Census Bureau TIGER/LINE states shapefile
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- inner_join(states_map@data, states, by="GEOID")
plot(states_map)
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
View(states_map@data)
# load Census Bureau TIGER/LINE states shapefile
states_map <- states()
# load Census Bureau TIGER/LINE states shapefile using tigris
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- inner_join(states_map@data, states)
# save shapefile
writeOGR(states_map,"states_map",layer="states_map", driver = "ESRI Shapefile")
View(states_map@data)
plot(states_map)
states_map <- states()
# join shapefile to Census data (fix row names first)
states_map@data <- left_join(states_map@data, states)
# save shapefile
writeOGR(states_map,"states_map", layer="states_map", driver = "ESRI Shapefile")
