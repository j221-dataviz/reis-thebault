setwd("~/Dropbox/berkeley/2017dataviz/Reis Thebault/reis-thebault/project_update_20171028")
library(readr)
library(dplyr)
library(ggplot2)
# reading csvs
refineries_demo <- read_csv('refineries_demo.csv')
refineries_names <- read_csv('refineries_names.csv')
# joining the two
refineries_demo_names <- inner_join(refineries_demo, refineries_names, by=c("frs_id" = "frs_id"))
#deleting all those pesky nulls --- why are they there??
# A - BOTH OF YOUR CSVs have hundreds of empty rows at the end, so every null gets joined to every null from the
# other data frame in the join. Let's look at why that was the case, just to be sure nothing went wrong earlyer
refineries_demo_names <- refineries_demo_names[-c(755:170294),]
# DON'T DO IT BY COUNTING ROWS, INSTEAD:
refineries_demo_names <- refineries_demo_names %>%
filter(!is.na(frs_id))
#reordering columns, so that facility_name is first
refineries_demo_names <- refineries_demo_names[c(1,46,2:45)]
# YOUR METHOD IS OK, BUT I WOULD DO THIS IN DPLYR ALSO:
refineries_demo_names <- refineries_demo_names %>%
select(1,46,2:45)
#importing toxic release data, must join two
tri_release <- read_csv('TRI_petroleum_release.csv')
tri_ID <- read_csv('tri_frs_ids.CSV')
#joining them and ditching all everything that isn't a refinery in 'tri_release'
refineries_release <- inner_join(tri_ID, tri_release, by=c("V_TRI_FORM_R_EZ.TRI_FACILITY_ID" = "TRIF ID"))
#joining release data with refinery demo data
# WHY DO WE DROP FROM 754 to 444 REFINERIES HERE. IT'S PROBABLY OK, I JUST WANT TO UNDERSTAND
refineries_demo_release <- inner_join(refineries_demo_names, refineries_release, by=c("frs_id" = "V_TRI_FORM_R_EZ.FRS_ID"))
#bringing clean data back
refineries_master <- read_csv('refineries_demo_release_clean.csv')
View(refineries_master)
refineries_1mile <- refineries_master %>%
filter(radius == '1')
refineries_3mile <- refineries_master %>%
filter(radius == '3')
refineries_5mile <- refineries_master %>%
filter(radius == '5')
View(refineries_1mile)
View(refineries_1mile)
refineries_1mile_cor <- refineries_1mile %>%
select(5,19,21,40)
round(cor(refineries_1mile_cor),2)
str(refineries_1mile_cor)
round(cor(refineries_1mile_cor, na.rm=TRUE),2)
cor(refineries_1mile_cor)
library(ggplot2)
ggplot(refineries_1mile_cor, aes(x=pxt_aa, y=total_releases_on-off-site_lbs)) +
geom_point() +
geom_smooth()
ggplot(refineries_1mile_cor, aes(x=pct_aa, y=total_releases_on-off-site_lbs)) +
geom_point() +
geom_smooth()
refineries_1mile_cor <- refineries_1mile %>%
select(5,19,21,40) %>%
rename(tri = total_releases_on-off-site_lbs)
refineries_1mile_cor <- refineries_1mile %>%
select(5,19,21,40) %>%
rename(tri = `total_releases_on-off-site_lbs`)
round(cor(refineries_1mile_cor),2)
ggplot(refineries_1mile_cor, aes(x=pct_aa,y=tri)) +
geom_point() +
geom_line()
ggplot(refineries_1mile_cor, aes(x=pct_aa,y=tri)) +
geom_point() +
geom_smooth()
ggplot(refineries_1mile_cor, aes(x=pct_hi,y=tri)) +
geom_point() +
geom_smooth()
round(cor(refineries_1mile_cor),2)
ggplot(refineries_1mile_cor, aes(x=pct_15k_25k,y=tri)) +
geom_point() +
geom_smooth()
col.names(refineries_1mile_cor)
names(refineries_1mile_cor)
for (n in names(refineries_1mile_cor)) {
ggplot(refineries_1mile_cor, aes(x=n,y=tri)) +
geom_point() +
geom_smooth()
}
for (n in names(refineries_1mile_cor)) {
print(n)
tmp <- ggplot(refineries_1mile_cor, aes(x=n,y=tri)) +
geom_point() +
geom_smooth()
plot(tmp)
}
ggplot(refineries_1mile_cor, aes(x=pct_15k_25k,y=tri)) +
geom_point() +
geom_smooth()
ggplot(refineries_1mile_cor, aes(y=pct_15k_25k,x=tri)) +
geom_point() +
geom_smooth()
